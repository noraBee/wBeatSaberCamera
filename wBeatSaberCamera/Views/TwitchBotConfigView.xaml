<UserControl x:Class="wBeatSaberCamera.Views.TwitchBotConfigView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:wBeatSaberCamera.Views"
             xmlns:models="clr-namespace:wBeatSaberCamera.Models"
             xmlns:utils="clr-namespace:wBeatSaberCamera.Utils"
             xmlns:controls="clr-namespace:wBeatSaberCamera.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{Binding TwitchBotConfigModel, Source={StaticResource MainViewModel}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Ressource/Style.xaml" />
                <ResourceDictionary Source="../Ressource/Brush.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <utils:DirtyBackground />
        <StackPanel Grid.IsSharedSizeScope="True">
            <Button Content="Login with twitch!" Margin="2" Padding="0" Click="Button_Click_1" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" MinWidth="60" SharedSizeGroup="confLeftCol" />
                    <ColumnDefinition Width="auto" MinWidth="5"/>
                    <ColumnDefinition Width="auto" MinWidth="90" SharedSizeGroup="confRightCol" />
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" Text="Username" />
                <TextBox Grid.Column="2" Margin="2" Padding="0" Text="{Binding OAuthAccessToken.UserName, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" MinWidth="60" SharedSizeGroup="confLeftCol" />
                    <ColumnDefinition Width="auto" MinWidth="5"/>
                    <ColumnDefinition Width="auto" MinWidth="90" SharedSizeGroup="confRightCol" />
                    <ColumnDefinition Width="auto" MinWidth="90" SharedSizeGroup="confRightCol" />
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" Text="OAuth token" />
                <TextBox Grid.Column="2" Margin="2" Padding="0" Text="{Binding OAuthAccessToken.AccessToken, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Effect>
                        <BlurEffect Radius="10" />
                    </TextBox.Effect>
                </TextBox>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" MinWidth="60" SharedSizeGroup="confLeftCol" />
                    <ColumnDefinition Width="auto" MinWidth="5"/>
                    <ColumnDefinition Width="auto" MinWidth="90" SharedSizeGroup="confRightCol" />
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" Text="Join channel" />
                <TextBox Grid.Column="2" Margin="2" Padding="0" Text="{Binding Channel}" />
            </Grid>
            <controls:AnnounceControl
                AnnounceContent="Announce new follows"
                IsChecked="{Binding IsFollowerAnnouncementsEnabled, UpdateSourceTrigger=PropertyChanged}"
                TextTemplate="{Binding FollowerAnnouncementTemplate, UpdateSourceTrigger=PropertyChanged}"
                Macros="{Binding TwitchBot.FollowKeys, Source={StaticResource MainViewModel}}" />
            <controls:AnnounceControl
                AnnounceContent="Announce subscribers"
                IsChecked="{Binding IsSubscriberAnnouncementsEnabled, UpdateSourceTrigger=PropertyChanged}"
                TextTemplate="{Binding SubscriberAnnouncementTemplate, UpdateSourceTrigger=PropertyChanged}"
                Macros="{Binding TwitchBot.SubscribeKeys, Source={StaticResource MainViewModel}}" />
            <controls:AnnounceControl
                AnnounceContent="Announce gifted subscriptions"
                IsChecked="{Binding IsGiftedSubscriptionAnnouncementsEnabled, UpdateSourceTrigger=PropertyChanged}"
                TextTemplate="{Binding GiftedSubscriptionAnnouncementTemplate, UpdateSourceTrigger=PropertyChanged}"
                Macros="{Binding TwitchBot.GiftedSubscriptionKeys, Source={StaticResource MainViewModel}}" />
            <controls:AnnounceControl
                AnnounceContent="Announce Hosts"
                IsChecked="{Binding IsHostAnnouncementsEnabled, UpdateSourceTrigger=PropertyChanged}"
                TextTemplate="{Binding HostAnnouncementTemplate, UpdateSourceTrigger=PropertyChanged}"
                Macros="{Binding TwitchBot.HostKeys, Source={StaticResource MainViewModel}}" />
            <controls:AnnounceControl
                AnnounceContent="Announce raids"
                IsChecked="{Binding IsRaidAnnouncementsEnabled, UpdateSourceTrigger=PropertyChanged}"
                TextTemplate="{Binding RaidAnnouncementTemplate, UpdateSourceTrigger=PropertyChanged}"
                Macros="{Binding TwitchBot.RaidKeys, Source={StaticResource MainViewModel}}" />
            <controls:AnnounceControl
                AnnounceContent="Welcome new chatters"
                IsChecked="{Binding IsWelcomeChattersEnabled, UpdateSourceTrigger=PropertyChanged}"
                TextTemplate="{Binding WelcomeChattersTemplate, UpdateSourceTrigger=PropertyChanged}"
                Macros="{Binding TwitchBot.WelcomeChattersKeys, Source={StaticResource MainViewModel}}" />
            <controls:AnnounceControl
                AnnounceContent="Announce bits"
                IsChecked="{Binding IsBitsAnnouncementsEnabled, UpdateSourceTrigger=PropertyChanged}"
                TextTemplate="{Binding BitsReceivedAnnouncementTemplate, UpdateSourceTrigger=PropertyChanged}"
                Macros="{Binding TwitchBot.OnBitsReceivedParameters, Source={StaticResource MainViewModel}}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" MinWidth="60" SharedSizeGroup="confLeftCol" />
                    <ColumnDefinition Width="auto" MinWidth="5"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" />
                <CheckBox Content="Enable TTS" IsChecked="{Binding ChatViewModel.IsTextToSpeechEnabled, UpdateSourceTrigger=PropertyChanged, Source={StaticResource MainViewModel}}" />
                <CheckBox Content="Enable Speech to Text" IsEnabled="{Binding Path=SpeechToTextModule.IsBusy, Source={StaticResource MainViewModel}, Converter={StaticResource BooleanToInvertedBooleanConverter}}" Grid.Column="1" IsChecked="{Binding ChatViewModel.IsSpeechToTextEnabled, UpdateSourceTrigger=PropertyChanged, Source={StaticResource MainViewModel}}" />
                <CheckBox Content="Enable Speech to Text (emotes)" IsEnabled="{Binding Path=SpeechToEmojiModule.IsBusy, Source={StaticResource MainViewModel}, Converter={StaticResource BooleanToInvertedBooleanConverter}}" Grid.Column="2" IsChecked="{Binding ChatViewModel.IsSpeechEmojiEnabled, UpdateSourceTrigger=PropertyChanged, Source={StaticResource MainViewModel}}" />
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" MinWidth="60" SharedSizeGroup="confLeftCol" />
                    <ColumnDefinition Width="auto" MinWidth="5"/>
                    <ColumnDefinition Width="auto" MinWidth="90" SharedSizeGroup="confRightCol" />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" />
                <CheckBox Content="Enable Message Sending" IsChecked="{Binding ChatViewModel.IsSendMessagesEnabled, UpdateSourceTrigger=PropertyChanged, Source={StaticResource MainViewModel}}" />
                <CheckBox Content="Read own(streamer) messages" Grid.Column="1" IsChecked="{Binding ChatViewModel.IsReadingStreamerMessagesEnabled, UpdateSourceTrigger=PropertyChanged, Source={StaticResource MainViewModel}}" />
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" MinWidth="60" SharedSizeGroup="confLeftCol" />
                    <ColumnDefinition Width="auto" MinWidth="5"/>
                    <ColumnDefinition Width="auto" MinWidth="90" SharedSizeGroup="confRightCol" />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock VerticalAlignment="Center" />
                <CheckBox Content="Read user names" IsChecked="{Binding ChatViewModel.ReadUserNames, UpdateSourceTrigger=PropertyChanged, Source={StaticResource MainViewModel}}" />
            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button Content="Connect!" IsEnabled="{Binding Path=TwitchBot.IsConnected, Source={StaticResource MainViewModel}, Converter={StaticResource BooleanToInvertedBooleanConverter}}" Click="Button_Click"/>
                <Button Content="Disconnect!" Grid.Column="2" IsEnabled="{Binding Path=TwitchBot.IsConnected, Source={StaticResource MainViewModel}}" Click="Button2_Click"/>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
